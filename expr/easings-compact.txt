# FFmpeg XFade custom easing and transition expressions, version 1.0
# by Raymond Luckhurst, https://scriptit.uk, https://github.com/scriptituk/xfade-easing

# Compact easing expressions, best for inline filter_complex filterchains

LINEAR_IN='st(0,1-P);st(1,ld(0));st(0,1-ld(1))'

LINEAR_OUT='st(0,1-P);st(1,ld(0));st(0,1-ld(1))'

LINEAR_INOUT='st(0,1-P);st(1,ld(0));st(0,1-ld(1))'

QUADRATIC_IN='st(0,1-P);st(1,ld(0)^2);st(0,1-ld(1))'

QUADRATIC_OUT='st(0,1-P);st(1,1-P^2);st(0,1-ld(1))'

QUADRATIC_INOUT='st(0,1-P);st(1,if(gt(P,0.5),2*ld(0)^2,1-2*P^2));st(0,1-ld(1))'

CUBIC_IN='st(0,1-P);st(1,ld(0)^3);st(0,1-ld(1))'

CUBIC_OUT='st(0,1-P);st(1,1-P^3);st(0,1-ld(1))'

CUBIC_INOUT='st(0,1-P);st(1,if(gt(P,0.5),4*ld(0)^3,1-4*P^3));st(0,1-ld(1))'

QUARTIC_IN='st(0,1-P);st(1,ld(0)^4);st(0,1-ld(1))'

QUARTIC_OUT='st(0,1-P);st(1,1-P^4);st(0,1-ld(1))'

QUARTIC_INOUT='st(0,1-P);st(1,if(gt(P,0.5),8*ld(0)^4,1-8*P^4));st(0,1-ld(1))'

QUINTIC_IN='st(0,1-P);st(1,ld(0)^5);st(0,1-ld(1))'

QUINTIC_OUT='st(0,1-P);st(1,1-P^5);st(0,1-ld(1))'

QUINTIC_INOUT='st(0,1-P);st(1,if(gt(P,0.5),16*ld(0)^5,1-16*P^5));st(0,1-ld(1))'

SINUSOIDAL_IN='st(0,1-P);st(1,1-sin(P*PI/2));st(0,1-ld(1))'

SINUSOIDAL_OUT='st(0,1-P);st(1,cos(P*PI/2));st(0,1-ld(1))'

SINUSOIDAL_INOUT='st(0,1-P);st(1,(1+cos(P*PI))/2);st(0,1-ld(1))'

EXPONENTIAL_IN='st(0,1-P);st(1,if(eq(P,1),0,2^(-10*P)));st(0,1-ld(1))'

EXPONENTIAL_OUT='st(0,1-P);st(1,if(eq(P,0),1,1-2^(-10*ld(0))));st(0,1-ld(1))'

EXPONENTIAL_INOUT='st(0,1-P);st(1,if(gt(P,0.5),if(eq(P,1),0,2^(9-20*P)),if(eq(P,0),1,1-2^(20*P-11))));st(0,1-ld(1))'

CIRCULAR_IN='st(0,1-P);st(1,1-sqrt(1-ld(0)^2));st(0,1-ld(1))'

CIRCULAR_OUT='st(0,1-P);st(1,sqrt(1-P^2));st(0,1-ld(1))'

CIRCULAR_INOUT='st(0,1-P);st(1,if(gt(P,0.5),1-sqrt(1-4*ld(0)^2),1+sqrt(1-4*P^2))/2);st(0,1-ld(1))'

ELASTIC_IN='st(0,1-P);st(1,cos(20*P*PI/3)/2^(10*P));st(0,1-ld(1))'

ELASTIC_OUT='st(0,1-P);st(1,1-cos(20*ld(0)*PI/3)/2^(10*ld(0)));st(0,1-ld(1))'

ELASTIC_INOUT='st(0,1-P);st(1,2*ld(0)-1);st(2,cos(40*ld(1)*PI/9)/2);st(3,2^(10*ld(1)));st(1,if(gt(P,0.5),ld(2)*ld(3),1-ld(2)/ld(3)));st(0,1-ld(1))'

BACK_IN='st(0,1-P);st(1,ld(0)^2*(ld(0)*2.70158-1.70158));st(0,1-ld(1))'

BACK_OUT='st(0,1-P);st(1,1-P^2*(P*2.70158-1.70158));st(0,1-ld(1))'

BACK_INOUT='st(0,1-P);st(1,if(gt(P,0.5),2*ld(0)^2*(2*ld(0)*2.525-1.525),1-2*P^2*(2*P*2.525-1.525)));st(0,1-ld(1))'

BOUNCE_IN='st(0,1-P);st(1,st(2,121/16);if(lt(P,4/11),ld(2)*P^2,if(lt(P,8/11),ld(2)*(P-6/11)^2+3/4,if(lt(P,10/11),ld(2)*(P-9/11)^2+15/16,ld(2)*(P-21/22)^2+63/64))));st(1,1-ld(1));st(0,1-ld(1))'

BOUNCE_OUT='st(0,1-P);st(1,st(2,121/16);if(lt(ld(0),4/11),ld(2)*ld(0)^2,if(lt(ld(0),8/11),ld(2)*(ld(0)-6/11)^2+3/4,if(lt(ld(0),10/11),ld(2)*(ld(0)-9/11)^2+15/16,ld(2)*(ld(0)-21/22)^2+63/64))));st(0,1-ld(1))'

BOUNCE_INOUT='st(0,1-P);st(1,sgn(P-0.5));st(0,ld(1)*(2*P-1));st(2,st(2,121/16);if(lt(ld(0),4/11),ld(2)*ld(0)^2,if(lt(ld(0),8/11),ld(2)*(ld(0)-6/11)^2+3/4,if(lt(ld(0),10/11),ld(2)*(ld(0)-9/11)^2+15/16,ld(2)*(ld(0)-21/22)^2+63/64))));st(1,(1-ld(1)*ld(2))/2);st(0,1-ld(1))'

SQUAREROOT_IN='st(0,1-P);st(1,sqrt(ld(0)));st(0,1-ld(1))'

SQUAREROOT_OUT='st(0,1-P);st(1,1-sqrt(P));st(0,1-ld(1))'

SQUAREROOT_INOUT='st(0,1-P);st(1,if(gt(P,0.5),sqrt(2*ld(0)),2-sqrt(2*P))/2);st(0,1-ld(1))'

CUBEROOT_IN='st(0,1-P);st(1,pow(ld(0),1/3));st(0,1-ld(1))'

CUBEROOT_OUT='st(0,1-P);st(1,1-pow(P,1/3));st(0,1-ld(1))'

CUBEROOT_INOUT='st(0,1-P);st(1,if(gt(P,0.5),pow(2*ld(0),1/3),2-pow(2*P,1/3))/2);st(0,1-ld(1))'
